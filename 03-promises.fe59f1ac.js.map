{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,WAAWE,YAAwBL,gCAC3CS,EAAAZ,GAASa,OAAOC,QAAQ,uBAAuBX,QAAeC,OAC9DW,QAAQC,IAAI,uBAAuBb,QAAeC,SAElDG,EAAO,SAASC,YAAwBL,+BACxCS,EAAAZ,GAASa,OAAOI,QAAQ,sBAAsBd,QAAeC,OAC5DW,QAAQC,IAAI,sBAAsBb,QAAeC,OACpD,GACCA,EAAA,GAEP,CAEA,MAAMc,EAAOC,SAASC,cAAc,SAC9BC,EAAO,CACXC,MAAOJ,EAAKK,SAASD,MAAME,MAC3BC,KAAMP,EAAKK,SAASE,KAAKD,MACzBE,OAAQR,EAAKK,SAASG,OAAOF,OAE/BN,EAAKS,iBAAiB,UAItB,SAAsBC,GACpB,IAAK,MAAMC,EAAI,EAAGA,EAAIR,EAAKK,OAAQG,IACjC3B,EAAc2B,EAAGP,OACjBP,QAAQC,IAAIa,EAAGP,OAEjBP,QAAQC,IAAIK,EAad,IArBAN,QAAQC,IAAIK,EAAKC,MAAOD,EAAKI,KAAMJ,EAAKK,QACxCX,QAAQC,IAAIK","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Success ${shouldResolve}! Value ${position} passed to resolve function`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Error ${shouldResolve}! Error ${position} passed to reject function`);\n        Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`)\n         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n}\n\nconst form = document.querySelector('.form');\nconst refs = { \n  delay: form.elements.delay.value,\n  step: form.elements.step.value,\n  amount: form.elements.amount.value,\n}\nform.addEventListener(\"submit\", onSubmitForm)\nconsole.log(refs.delay, refs.step, refs.amount);\nconsole.log(refs);\n\nfunction onSubmitForm(event) { \n  for (const i = 0; i < refs.amount; i++) {\n    createPromise(i, delay)\n    console.log(i, delay);\n  }\n  console.log(refs);\n\n    // createPromise(position, delay)\n    //   .then(({ position, delay }) => {\n    //     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //   })\n    //   .catch(({ position, delay }) => {\n    //     Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`)\n    //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    //   });\n  //}\n  \n}\n"],"names":["$19McP","parcelRequire","$75aa520dfb7f3d3e$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","console","log","warning","$75aa520dfb7f3d3e$var$form","document","querySelector","$75aa520dfb7f3d3e$var$refs","delay","elements","value","step","amount","addEventListener","event","i"],"version":3,"file":"03-promises.fe59f1ac.js.map"}