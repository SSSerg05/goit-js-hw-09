{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAWA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,GACGH,EAAKI,SAASC,MACfL,EAAKI,SAASE,KACZN,EAAKI,SAASG,QAExBP,EAAKQ,iBAAiB,UAEtB,SAAsBC,GACpB,IAAK,MAAMC,KAAYP,GACGE,WAlBJM,KAAKC,UAmBtBC,MAAK,EAACH,SAAEA,EAAUL,MAAAS,MACjBC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAuBP,QAAeI,OAC9DI,QAAQC,IAAI,uBAAuBT,QAAeI,MAAS,IAE5DM,OAAM,EAACV,SAAEA,EAAUL,MAAAS,MAClBC,EAAAjB,GAASkB,OAAOK,QAAQ,sBAAsBX,QAAeI,OAC7DI,QAAQC,IAAI,sBAAsBT,QAAeI,MAAS,GAIlE","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst form = document.querySelector('.form');\nconst refs = { \n  delay: form.elements.delay,\n  step: form.elements.step,\n  amount: form.elements.amount,\n}\nform.addEventListener(\"submit\", onSubmitForm)\n\nfunction onSubmitForm(event) { \n  for (const position in refs.amount) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`)\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  \n}\n"],"names":["$19McP","parcelRequire","$75aa520dfb7f3d3e$var$form","document","querySelector","$75aa520dfb7f3d3e$var$refs","elements","delay","step","amount","addEventListener","event","position","Math","random","then","delay1","$parcel$interopDefault","Notify","success","console","log","catch","warning"],"version":3,"file":"03-promises.d09657ce.js.map"}