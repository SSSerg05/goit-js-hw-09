{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAgB9B,OAde,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIJ,EAAeL,EAAUC,GAErCS,YAAW,KACLL,EACFF,EAAQ,OAERC,EAAO,QAERH,EAAA,GAKP,CAEA,MAAMU,EAAOC,SAASC,cAAc,SAC9BC,EAAO,CACVb,MAAOU,EAAKI,SAASd,MACrBe,KAAML,EAAKI,SAASC,KACpBC,OAAQN,EAAKI,SAASE,QAEzBN,EAAKO,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIJ,EAAOK,OAAOP,EAAKb,MAAMqB,OAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAOP,EAAKG,OAAOK,OAAQC,IAE7CxB,EAAcwB,EAAGP,GACdQ,MAAK,EAACD,EAAEA,EAACP,KAAEA,MACVS,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAuBJ,QAAQP,OACvDR,QAAQC,IAAI,uBAAuBc,QAAQP,MAAQ,IAEpDY,OAAM,EAACL,EAAEA,EAACP,KAAEA,MACXS,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAsBN,QAAQP,OACtDR,QAAQC,IAAI,sBAAsBc,QAAQP,MAAQ,IAEtDA,GAAQK,OAAOP,EAAKE,KAAKM,MAE7B","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(shouldResolve, position, delay)\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('yes'); //Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)); \n      } else {\n        reject('no'); //Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n\n  })\n\n   return promise;\n}\n\nconst form = document.querySelector('.form');\nconst refs = { \n   delay: form.elements.delay,\n   step: form.elements.step,\n   amount: form.elements.amount,\n}\nform.addEventListener(\"submit\", onSubmitForm)\n\n\nfunction onSubmitForm(event) { \n  event.preventDefault();\n  let step = Number(refs.delay.value);\n\n  for (let i = 0; i < Number(refs.amount.value); i++) {\n    \n    createPromise(i, step)\n      .then(({ i, step }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${step}ms`)\n        console.log(`✅ Fulfilled promise ${i} in ${step}ms`);\n      })\n      .catch(({ i, step }) => {\n        Notiflix.Notify.warning(`❌ Rejected promise ${i} in ${step}ms`)\n        console.log(`❌ Rejected promise ${i} in ${step}ms`);\n      });\n    step += Number(refs.step.value)\n  } \n}\n"],"names":["$19McP","parcelRequire","$75aa520dfb7f3d3e$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","console","log","setTimeout","$75aa520dfb7f3d3e$var$form","document","querySelector","$75aa520dfb7f3d3e$var$refs","elements","step","amount","addEventListener","event","preventDefault","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.c85b7f50.js.map"}